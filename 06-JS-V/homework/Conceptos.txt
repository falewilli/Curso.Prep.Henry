Prototype: se dice que JavaScript es un lenguaje basado en prototipos. Los prototipos son la manera de establecer propiedades o métodos de manera centralizada y luego dar acceso a los objetos de esa clase a dichos métodos, ahorrando así muchas líneas de código y por ende ahorrando capacidad de procesamiento y memoria. Esto nos permite luego modificar/quitar/agregar las propiedades o métodos y esos cambios serán compartidos a todas las instancias sin necesidad de modificar en más de un lugar. Los prototipos además se van heredando de "padres" a "hijos" a través de la Prototype Chain.

Constructor: cuando tenemos que crear muchos objetos que compartirán la misma plantilla, es decir que tendrán en común las mismas propiedades o métodos, creamos una función que se llama constructor o class. Las clases son funciones especiales que nos permiten crear o construir objetos a partir de esa plantilla o template. Esa función constructora nos permitirá construir instancias (a través de la palabra clave new), que creará y nos devolverá objetos automáticamente.